generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model dosen {
  nip                 String                @id(map: "pk_nip_dosen") @db.VarChar(18)
  nama                String                @db.VarChar(255)
  email               String                @unique @db.VarChar(255)
  mahasiswa           mahasiswa[]
  setoran             setoran[]
  log_setoran_hafalan log_setoran_hafalan[]
}

model mahasiswa {
  nim                 String                @id(map: "pk_nim_mahasiswa") @db.VarChar(11)
  nama                String                @db.VarChar(255)
  email               String                @unique @db.VarChar(36)
  nip                 String                @db.VarChar(18)
  aktif               Boolean               @default(true)
  dosen               dosen                 @relation(fields: [nip], references: [nip], onDelete: NoAction, onUpdate: Cascade, map: "fk_nip_mahasiswa")
  setoran             setoran[]
  log_setoran_hafalan log_setoran_hafalan[]
}

model setoran {
  id                  String           @id(map: "pk_id_setoran") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tgl_setoran         DateTime?        @default(now()) @db.Date
  tgl_validasi        DateTime?        @default(now()) @db.Date
  nim                 String           @db.VarChar(11)
  nip                 String           @db.VarChar(18)
  id_komponen_setoran String           @db.Uuid
  mahasiswa           mahasiswa        @relation(fields: [nim], references: [nim], onDelete: NoAction, onUpdate: NoAction, map: "fk_nim_setoran")
  dosen               dosen            @relation(fields: [nip], references: [nip], onDelete: NoAction, onUpdate: Cascade, map: "fk_nip_setoran")
  komponen_setoran    komponen_setoran @relation(fields: [id_komponen_setoran], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_komponen_setoran")

  @@unique([nim, id_komponen_setoran])
}

model komponen_setoran {
  id          String                       @id(map: "pk_id_komponen_setoran") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nama        String                       @db.VarChar(35)
  nama_arab   String?                      @db.Text
  external_id String?                      @db.VarChar(35)
  jenis       type_jenis_komponen_setoran
  label       type_label_komponen_setoran?
  setoran     setoran[]
}

model log_setoran_hafalan {
  id         Int                           @id(map: "pk_id_log_setoran_hafalan") @default(autoincrement()) @db.Integer
  keterangan String?                       @db.Text
  aksi       type_aksi_log_setoran_hafalan
  ip         String?                       @db.VarChar(45)
  user_agent String?                       @db.VarChar(255)
  timestamp  DateTime                      @default(now()) @db.Timestamp(6)
  nim        String                        @db.VarChar(11)
  nip        String                        @db.VarChar(18)

  mahasiswa mahasiswa @relation(fields: [nim], references: [nim], onDelete: NoAction, onUpdate: Cascade, map: "fk_nim_log_setoran_hafalan")
  dosen     dosen     @relation(fields: [nip], references: [nip], onDelete: NoAction, onUpdate: Cascade, map: "fk_nip_log_setoran_hafalan")

  @@map("log_setoran_hafalan")
}

enum type_jenis_komponen_setoran {
  SURAH
  DOA
  BACAAN_SHOLAT
  HADIST
}

enum type_label_komponen_setoran {
  KP
  SEMKP
  DAFTAR_TA
  SEMPRO
  SIDANG_TA
}

enum type_aksi_log_setoran_hafalan {
  VALIDASI
  BATALKAN
}
